@page
@model Dice_Roller_0._1.Pages.CC1Model
@{

}
<body>
    @{
        
    }
</body>
<form>
    <div class="text-center">
        <h1 id="CCTitle">Character Creator</h1>
        <h2>Name</h2>
        <!--Text Box Input for Name-->
        <label for="Name">Choose a Name</label>
        <input type="text" id="Name" name="Name" runat="server">
        <br />
        <br />
        

        <h2>Class</h2>
        <!--Dropdown list to select from all classes-->
            <label for="selectClass">Choose a Class:</label>
            <select id="selectClass" name="selectClass" runat="server">
                <option value="">Choose a Class</option>
                <option value="barbarian">Barbarian</option>
                <option value="bard">Bard</option>
                <option value="cleric">Cleric</option>
                <option value="druid">Druid</option>
                <option value="fighter">Fighter</option>
                <option value="monk">Monk</option>
                <option value="paladin">Paladin</option>
                <option value="ranger">Ranger</option>
                <option value="rogue">Rogue</option>
                <option value="sorcerer">Sorcerer</option>
                <option value="warlock">Warlock</option>
                <option value="wizard">Wizard</option>
            </select>
            <br />
        <h2>Race</h2>
        <!--Dropdown list to select from all races-->
        <label for="selectRace">Choose a Race:</label>
        <select id="selectRace" name="selectRace" runat="server">
            <option value="">Choose a Race</option>
            <option value="dwarf">Dwarf</option>
            <option value="elf">Elf</option>
            <option value="halfling">Halfling</option>
            <option value="human">Human</option>
            <option value="dragonborn">Dragonborn</option>
            <option value="gnome">Gnome</option>
            <option value="halfElf">Half-Elf</option>
            <option value="halfOrc">Half-Orc</option>
            <option value="tiefling">Tiefling</option>
        </select>
        <br />
        <h2>Background</h2>
        <!--Dropdown List to select from all backgrounds-->
        <label for="selectBackground">Choose a Background:</label>
        <select id="selectBackground" name="selectBackground" runat="server">
            <option value="">Choose a Background</option>
            <option value="acolyte">Acolyte</option>
            <option value="charlatan">Charlatan</option>
            <option value="criminal">Criminal</option>
            <option value="entertainer">Entertainer</option>
            <option value="folk-hero">Folk Hero</option>
            <option value="guild-artisan">Guild Artisan</option>
            <option value="hermit">Hermit</option>
            <option value="noble">Noble</option>
            <option value="outlander">Outlander</option>
            <option value="sage">Sage</option>
            <option value="sailor">Sailor</option>
            <option value="soldier">Soldier</option>
            <option value="urchin">Urchin</option>
        </select>
        <br />
        <h2>Alignment</h2>
        <!--Dropdown List to select from all alignments-->
        <label for="selectAlignment">Choose an Alignment:</label>
        <select id="selectAlignment" name="selectAlignment" runat="server">
            <option value="">Choose an Alignment</option>
            <option value="lg">Lawful Good</option>
            <option value="ln">Lawful Neutral</option>
            <option value="le">Lawful Evil</option>
            <option value="ng">Neutral Good</option>
            <option value="tn">True Neutral</option>
            <option value="ne">Neutral Evil</option>
            <option value="cg">Chaotic Good</option>
            <option value="cn">Chaotic Neutral</option>
            <option value="ce">Chaotic Evil</option>
        </select>        
    </div>
    </form>
    <br />
    <br />
<div>
    @{
        
        CookieOptions options = new CookieOptions();
        options.Expires = DateTime.Now.AddYears(50);
        /*
        string strStat = HttpContext.Request.Query["strStat"].ToString();
        string dexStat = HttpContext.Request.Query["dexStat"].ToString();
        string conStat = HttpContext.Request.Query["conStat"].ToString();
        string intStat = HttpContext.Request.Query["intStat"].ToString();
        string wisStat = HttpContext.Request.Query["wisStat"].ToString();
        string chaStat = HttpContext.Request.Query["chaStat"].ToString();
        */
        string nameInput = HttpContext.Request.Query["Name"].ToString();
        string raceInput = HttpContext.Request.Query["selectRace"].ToString();
        string classInput = HttpContext.Request.Query["selectClass"].ToString();
        string maxHPInput = HttpContext.Request.Query[""].ToString();
        string currHPInput = HttpContext.Request.Query[""].ToString();
        string bgInput = HttpContext.Request.Query["selectBackground"].ToString();
        string alInput = HttpContext.Request.Query["selectAlignment"].ToString();
        string sizeInput = HttpContext.Request.Query["selectRace"].ToString();

        if (sizeInput.Equals("halfling") || sizeInput.Equals("gnome"))
        {
            sizeInput = "small";
        }
        else
        {
            sizeInput = "medium";
        }

        string CC1Data = /*"_str:" + strStat + ",_dex:" + dexStat + ",_con:" + conStat + ",_int:" + intStat + ",_wis:" + wisStat + ",_cha:" + chaStat + */",_name:" + nameInput + "," + "_race:" + raceInput + "," + "_class:" + classInput + "," + "_maxHP:" + maxHPInput + "," + "_currHP:" + currHPInput + "," + "_bg:" + bgInput + "," + "_al:" + alInput + "," + "_size:" + sizeInput;

        Response.Cookies.Append("CC1Data", CC1Data, options);
        
    }
    <p>@Request.Cookies["CC1Data"]</p>
</div>

<!--ADDED ON STATS AND HEALTH FROM CC2 HERE-->
<br />
<br />
<div class="text-center">

    <style>
        .container {
        }

        .box {
            border: 3px solid;
            border-color: #052f5f;
            background-color: #79a9d1;
            border-radius: 50%;
            padding: 10px;
            width: 50px;
            height: 50px;
            cursor: move;
            text-align: center;
            color: #000000;
            font-weight: 500;
        }

            .box.over {
                border: 3px dotted darkblue;
            }
    </style>

    <script type="text/javascript">


        document.addEventListener('DOMContentLoaded', (event) => {

            var dragSrcEl = null;

            function handleDragStart(e) {
                this.style.opacity = '0.4';

                dragSrcEl = this;

                e.dataTransfer.effectAllowed = 'move';
                e.dataTransfer.setData('text/html', this.innerHTML);
            }

            function handleDragEnd(e) {
                this.style.opacity = '1';
            }

            function handleDragOver(e) {
                if (e.preventDefault) {
                    e.preventDefault();
                }

                return false;
            }

            function handleDragEnter(e) {
                this.classList.add('over');
            }

            function handleDragLeave(e) {
                this.classList.remove('over');
            }

            function handleDrop(e) {
                e.stopPropagation();

                if (dragSrcEl !== this) {
                    dragSrcEl.innerHTML = this.innerHTML;
                    this.innerHTML = e.dataTransfer.getData('text/html');
                }

                this.classList.remove('over');

                return false;
            }

            let items = document.querySelectorAll('.container .box');
            items.forEach(function (item) {
                item.addEventListener('dragstart', handleDragStart);
                item.addEventListener('dragover', handleDragOver);
                item.addEventListener('dragenter', handleDragEnter);
                item.addEventListener('dragleave', handleDragLeave);
                item.addEventListener('dragend', handleDragEnd);
                item.addEventListener('drop', handleDrop);
            });
        });


        //create a function to display the content of the div elements in order
        function storeStats() {
            let stats = new Array(6);
            //document.querySelector('.box').innerHTML
            let items = document.querySelectorAll('.container .box');
            let counter = 0;
            items.forEach(function (item) {
                stats[counter] = item.innerHTML;
                counter++;
            });
            /*
            alert(stats[0]);
            alert(stats[1]);
            alert(stats[2]);
            alert(stats[3]);
            alert(stats[4]);
            alert(stats[5]);
            */

            //@ViewData["strStat"] = stats[0];
            //@ViewData["dexStat"] = stats[1];
            //@ViewData["conStat"] = stats[2];
            //@ViewData["intStat"] = stats[3];
            //@ViewData["wisStat"] = stats[4];
            //@ViewData["chaStat"] = stats[5];

            //@ViewData["statToggle"] = true;
            //document.getElementById("hiddenStr").innerHTML = stats[0];

            document.getElementById("hiddenId").innerHTML = stats[0];
        }


        function accessStr() {
            let testStat = document.getElementById("hiddenId").innerHTML;
            return testStat;
        }
    </script>
<label for="maxHP">Input your Max HP</label>
<input type="text" id="maxHP" name="maxHP" runat="server">
<br />
<br />
<label for="currHP">Input your Current HP</label>
<input type="text" id="currHP" name="currHP" runat="server">
<br />
<br />

<div class="container">
    <p>Strength:</p>
    <div id="stat1" draggable="true" class="box">@ViewData["stat1"]</div>
    <br />

    <p>Dexterity:</p>
    <div id="stat2" draggable="true" class="box">@ViewData["stat2"]</div>
    <br />

    <p>Constitution:</p>
    <div id="stat3" draggable="true" class="box">@ViewData["stat3"]</div>
    <br />

    <p>Intelligence:</p>
    <div id="stat4" draggable="true" class="box">@ViewData["stat4"]</div>
    <br />

    <p>Wisdom:</p>
    <div id="stat5" draggable="true" class="box">@ViewData["stat5"]</div>
    <br />

    <p>Charisma:</p>
    <div id="stat6" draggable="true" class="box">@ViewData["stat6"]</div>
</div>
<br />
<br />

<div>
    <form asp-page-handler="storeStats" method="post"><button onclick="storeStats()">Submit</button></form>
</div>

<!--<div id="hiddenId" type="hidden"></div>-->

@{
    //string getID = HtmlHelper.Id("hidden");
    /*
    string strStat = HttpContext.Request.Query["strStat"].ToString();
    string dexStat = HttpContext.Request.Query["dexStat"].ToString();
    string conStat = HttpContext.Request.Query["conStat"].ToString();
    string intStat = HttpContext.Request.Query["intStat"].ToString();
    string wisStat = HttpContext.Request.Query["wisStat"].ToString();
    string chaStat = HttpContext.Request.Query["chaStat"].ToString();
    */
    //if (Convert.ToBoolean(ViewData["statToggle"]))
    //{






    //}


}
</div>
<div class="text-center">
    <button class="backButton" onclick="window.location.href='https://localhost:44331/Index';">Back</button><button class="continueButton" onclick="window.location.href='https://localhost:44331/CC2';">Continue</button>
</div>