@page
@model Dice_Roller_0._1.Pages.CC2Model
@{
    ViewData["strStat"] = "";
}
<head>
<style>
    .container {
    }

    .box {
        border: 3px solid;
        border-color: #052f5f;
        background-color: #79a9d1;
        border-radius: 50%;
        padding: 10px;
        width: 50px;
        height: 50px;
        cursor: move;
        text-align: center;
        color: #000000;
        font-weight: 500;
    }

    .box.over {
        border: 3px dotted darkblue;
    }
</style>

<script type="text/javascript">
    

    document.addEventListener('DOMContentLoaded', (event) => {

        var dragSrcEl = null;

        function handleDragStart(e) {
            this.style.opacity = '0.4';

            dragSrcEl = this;

            e.dataTransfer.effectAllowed = 'move';
            e.dataTransfer.setData('text/html', this.innerHTML);
        }

        function handleDragEnd(e) {
            this.style.opacity = '1';
        }

        function handleDragOver(e) {
            if (e.preventDefault) {
                e.preventDefault();
            }

            return false;
        }

        function handleDragEnter(e) {
            this.classList.add('over');
        }

        function handleDragLeave(e) {
            this.classList.remove('over');
        }

        function handleDrop(e) {
            e.stopPropagation();

            if (dragSrcEl !== this) {
                dragSrcEl.innerHTML = this.innerHTML;
                this.innerHTML = e.dataTransfer.getData('text/html');
            }

            this.classList.remove('over');

            return false;
        }

        let items = document.querySelectorAll('.container .box');
        items.forEach(function (item) {
            item.addEventListener('dragstart', handleDragStart);
            item.addEventListener('dragover', handleDragOver);
            item.addEventListener('dragenter', handleDragEnter);
            item.addEventListener('dragleave', handleDragLeave);
            item.addEventListener('dragend', handleDragEnd);
            item.addEventListener('drop', handleDrop);
        });
    });

    //create a function to display the content of the div elements in order
    function printId() {
        let stats = new Array(6);
        //document.querySelector('.box').innerHTML
        let items = document.querySelectorAll('.container .box');
        let counter = 0;
        items.forEach(function (item) {
            stats[counter] = item.innerHTML;
            counter++;
        });
        /*
        alert(stats[0]);
        alert(stats[1]);
        alert(stats[2]);
        alert(stats[3]);
        alert(stats[4]);
        alert(stats[5]);
        */

        
    }
</script>

    @{
        int[] stats = new int[6];
        
    }
</head>

<h1 id="CCTitle" class="text-center">Character Creator</h1>

<form asp-page-handler="TEST" method="post">
       
    
    <label for="maxHP">Input your Max HP</label>
    <input type="text" id="maxHP" name="maxHP" runat="server">
    <br />

    <label for="currHP">Input your Current HP</label>
    <input type="text" id="currHP" name="currHP" runat="server">
    <br />
    Test receive method
    <button>TEST</button>
</form>

<br />
<br />

<div class="container">
    <p>Strength:</p>
    <div id="stat1" draggable="true" class="box">@ViewData["stat1"]</div>
    <br />

    <p>Dexterity:</p>
    <div id="stat2" draggable="true" class="box">@ViewData["stat2"]</div>
    <br />

    <p>Constitution:</p>
    <div id="stat3" draggable="true" class="box">@ViewData["stat3"]</div>
    <br />

    <p>Intelligence:</p>
    <div id="stat4" draggable="true" class="box">@ViewData["stat4"]</div>
    <br />

    <p>Wisdom:</p>
    <div id="stat5" draggable="true" class="box">@ViewData["stat5"]</div>
    <br />

    <p>Charisma:</p>
    <div id="stat6" draggable="true" class="box">@ViewData["stat6"]</div>
</div>
<div>
    <button onclick="printId()">Submit</button>
</div>
<div>
    <p>@ViewData["stat1"]</p>
</div>

@{
    /*
    string strStat = HttpContext.Request.Query["strStat"].ToString();
    string dexStat = HttpContext.Request.Query["dexStat"].ToString();
    string conStat = HttpContext.Request.Query["conStat"].ToString();
    string intStat = HttpContext.Request.Query["intStat"].ToString();
    string wisStat = HttpContext.Request.Query["wisStat"].ToString();
    string chaStat = HttpContext.Request.Query["chaStat"].ToString();

    string tempStorage = "_str:" + strStat + ",_dex:" + dexStat + ",_con:" + conStat + ",_int:" + intStat + ",_wis:" + wisStat + ",_cha:" + chaStat;

    
    //Console.WriteLine(tempStorage + Request.Cookies["CC1Data"]);
    ViewData["CC2Char"] = tempStorage + Request.Cookies["CC1Data"];
    */
}
